BASED ON ECOOP 2018 REJECTION:

# Major comments (for the author-response).

Could you provide a bullet-point list to identify the major contributions?

Could you relate your work back to some existing capability/effect systems? For
example, would your work improve on the sandbox technology in Java?

# Minor comments (not for the author-response).

Here are some questions I encountered while reading the paper. After reading the
entire paper, I can answer some of these questions already, but maybe you can
use them to improve the structure of the paper:

Page 2, top, what is your definition of effect?

Page 2, mid, if a capability is a token, how is that token made available to the
expression e? 

Page 4, top, what does it mean that a capability or operation cannot be created
or destroyed? Give an example?

Page 5, bot, why is unit not in the grammar for types? (because it is encoded,
but that is only explained later.)

Page 5, bot, font for "effects" look wierd.

Page 6, bot, explain why you add/need sub-typing.

Page 10, top, OC and CC would have been more consistent if in CC you had used
hats to represent un-annotated code. Instead, you add un-annotated code but give
it the syntax of annotated code...

Page 21, top, "functino" typo. :)

Page 22, top, is the annotation on log correct? Is it not \emptyset?

Page 23, top, "int erface" typo.

Page 25, mid, perhaps use \citeauthor or rework your sentences not to start with
a numbered reference?
