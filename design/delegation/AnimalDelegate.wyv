type Animal
	def eat()
	def swallow()

type Dog extends Animal
	def bark():String

val dog:Dog = new
	val parent:AnimalDelegate = makeAnimal()
	delegate Animal to parent
	def bark():String = "Woof"
	def swallow():Unit = new Unit()

def makeAnimal():AnimalDelegate = new this =>
	def eat(@Self self:Animal)
		self.swallow()
		this.swallow()
	def swallow() = new Unit()

type AnimalDelegate
	def eat(self:Animal)
	def swallow()
